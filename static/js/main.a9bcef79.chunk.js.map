{"version":3,"sources":["components/MarkdownEditor/style.js","components/SideBySide.js","components/MarkdownEditor/Editor.js","components/MarkdownEditor/Preview.js","components/MarkdownEditor/index.js","components/MarkdownEditor/constants.js","App.js","serviceWorker.js","index.js"],"names":["H2","styled","BootStrapH2","withConfig","shouldForwardProp","prop","includes","textAlign","FullScreen","div","EditorDiv","CodeArea","textarea","PreviewDiv","SideBySide","Editor","markdown","setMarkdown","id","value","onChange","e","target","autoFocus","Preview","source","linkTarget","escapeHtml","plugins","require","MarkdownEditor","useState","App","useFccTest","fccTest","FccTests","markdown_previewer","queryParam","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mmPAKO,IAAMA,EAAKC,YAAOC,KAAaC,WAAW,CAC7CC,kBAAmB,SAACC,GAAD,OAAW,CAAC,aAAaC,SAASD,KADvCJ,CAAH,KAGG,qBAAGM,WAA6B,aAGrCC,EAAaP,IAAOQ,IAAV,KAKVC,EAAYT,IAAOQ,IAAV,KAKTE,EAAWV,IAAOW,SAAV,KAMRC,EAAaZ,IAAOQ,IAAV,K,8WCzBvB,IAaeK,EAbIb,IAAOQ,IAAV,KCcDM,EAXA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,YAAb,OACX,kBAACP,EAAD,KACI,kBAACC,EAAD,CAAUO,GAAG,SAASC,MAAOH,EAAUI,SAAU,SAAAC,GAAC,OAAIJ,EAAYI,EAAEC,OAAOH,QAAQI,WAAS,M,iBCarFC,EAfC,SAAC,GAAD,IAAGR,EAAH,EAAGA,SAAH,OACZ,kBAACH,EAAD,CAAYK,GAAG,WACX,kBAAC,IAAD,CACIO,OAAQT,EACRU,WAAW,SACXC,YAAY,EACZC,QAAS,CAACC,EAAQ,UCWfC,EAdQ,WAAO,IAAD,EACOC,mBCTR,muBDQC,mBAClBf,EADkB,KACRC,EADQ,KAGzB,OACI,kBAACT,EAAD,CAAYU,GAAG,mBACX,kBAAC,IAAD,KAAQ,kBAAClB,EAAD,CAAIO,UAAU,UAAd,oBACR,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAQS,SAAUA,EAAUC,YAAaA,IACzC,kBAAC,EAAD,CAASD,SAAUA,OECpBgB,MAbf,WAMI,OALAC,qBAAW,CACPC,QAASC,WAASC,mBAClBC,WAAY,aAIZ,8BACI,kBAAC,EAAD,QCAQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2HzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GAC/BA,EAAaC,iB","file":"static/js/main.a9bcef79.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Header, H2 as BootStrapH2 } from '@bootstrap-styled/v4';\n\nexport { Header };\n\nexport const H2 = styled(BootStrapH2).withConfig({\n    shouldForwardProp: (prop) => !['textAlign'].includes(prop)\n})`\n    text-align: ${({ textAlign }) => textAlign || 'inherit'};\n`;\n\nexport const FullScreen = styled.div`\n    width: 100vw;\n    height: 100vh;\n`;\n\nexport const EditorDiv = styled.div`\n    display: grid;\n    border: 1px solid black;\n`;\n\nexport const CodeArea = styled.textarea`\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace;\n    resize: none;\n    /* overflow: visible; */\n`;\n\nexport const PreviewDiv = styled.div`\n    display: grid;\n    overflow: auto;    \n    padding: 5px;\n    border: 1px solid black;\n\n    a {\n        color: #4183C4;\n        text-decoration: none;\n    }\n\n    a:hover {\n        text-decoration: underline;\n    }\n\n    a.absent {\n        color: #cc0000;\n    }\n\n    a.anchor {\n        display: block;\n        padding-left: 30px;\n        margin-left: -30px;\n        cursor: pointer;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        margin: 20px 0 10px;\n        padding: 0;\n        font-weight: bold;\n        -webkit-font-smoothing: antialiased;\n        cursor: text;\n        position: relative;\n    }\n\n    h1:hover a.anchor,\n    h2:hover a.anchor,\n    h3:hover a.anchor,\n    h4:hover a.anchor,\n    h5:hover a.anchor,\n    h6:hover a.anchor {\n        background: url(\"../../images/modules/styleguide/para.png\") no-repeat 10px center;\n        text-decoration: none;\n    }\n\n    h1 tt,\n    h1 code {\n        font-size: inherit;\n    }\n\n    h2 tt,\n    h2 code {\n        font-size: inherit;\n    }\n\n    h3 tt,\n    h3 code {\n        font-size: inherit;\n    }\n\n    h4 tt,\n    h4 code {\n        font-size: inherit;\n    }\n\n    h5 tt,\n    h5 code {\n        font-size: inherit;\n    }\n\n    h6 tt,\n    h6 code {\n        font-size: inherit;\n    }\n\n    h1 {\n        font-size: 28px;\n        color: black;\n    }\n\n    h2 {\n        font-size: 24px;\n        border-bottom: 1px solid #cccccc;\n        color: black;\n    }\n\n    h3 {\n        font-size: 18px;\n    }\n\n    h4 {\n        font-size: 16px;\n    }\n\n    h5 {\n        font-size: 14px;\n    }\n\n    h6 {\n        color: #777777;\n        font-size: 14px;\n    }\n\n    p,\n    blockquote,\n    ul,\n    ol,\n    dl,\n    li,\n    table,\n    pre {\n        margin: 15px 0;\n    }\n\n    hr {\n        background: transparent url(\"../../images/modules/pulls/dirty-shade.png\") repeat-x 0 0;\n        border: 0 none;\n        color: #cccccc;\n        height: 4px;\n        padding: 0;\n    }\n\n    a:first-child h1,\n    a:first-child h2,\n    a:first-child h3,\n    a:first-child h4,\n    a:first-child h5,\n    a:first-child h6 {\n        margin-top: 0;\n        padding-top: 0;\n    }\n\n    h1 p,\n    h2 p,\n    h3 p,\n    h4 p,\n    h5 p,\n    h6 p {\n        margin-top: 0;\n    }\n\n    li p.first {\n        display: inline-block;\n    }\n\n    ul,\n    ol {\n        padding-left: 30px;\n    }\n\n    ul :first-child,\n    ol :first-child {\n        margin-top: 0;\n    }\n\n    ul :last-child,\n    ol :last-child {\n        margin-bottom: 0;\n    }\n\n    dl {\n        padding: 0;\n    }\n\n    dl dt {\n        font-size: 14px;\n        font-weight: bold;\n        font-style: italic;\n        padding: 0;\n        margin: 15px 0 5px;\n    }\n\n    dl dt:first-child {\n        padding: 0;\n    }\n\n    dl dt> :first-child {\n        margin-top: 0;\n    }\n\n    dl dt> :last-child {\n        margin-bottom: 0;\n    }\n\n    dl dd {\n        margin: 0 0 15px;\n        padding: 0 15px;\n    }\n\n    dl dd> :first-child {\n        margin-top: 0;\n    }\n\n    dl dd> :last-child {\n        margin-bottom: 0;\n    }\n\n    blockquote {\n        border-left: 4px solid #dddddd;\n        padding: 0 15px;\n        color: #777777;\n    }\n\n    blockquote> :first-child {\n        margin-top: 0;\n    }\n\n    blockquote> :last-child {\n        margin-bottom: 0;\n    }\n\n    table {\n        padding: 0;\n    }\n\n    table tr {\n        border-top: 1px solid #cccccc;\n        background-color: white;\n        margin: 0;\n        padding: 0;\n    }\n\n    table tr:nth-child(2n) {\n        background-color: #f8f8f8;\n    }\n\n    table tr th {\n        font-weight: bold;\n        border: 1px solid #cccccc;\n        text-align: left;\n        margin: 0;\n        padding: 6px 13px;\n    }\n\n    table tr td {\n        border: 1px solid #cccccc;\n        text-align: left;\n        margin: 0;\n        padding: 6px 13px;\n    }\n\n    table tr th :first-child,\n    table tr td :first-child {\n        margin-top: 0;\n    }\n\n    table tr th :last-child,\n    table tr td :last-child {\n        margin-bottom: 0;\n    }\n\n    img {\n        max-width: 100%;\n    }\n\n    span.frame {\n        display: block;\n        overflow: hidden;\n    }\n\n    span.frame>span {\n        border: 1px solid #dddddd;\n        display: block;\n        float: left;\n        overflow: hidden;\n        margin: 13px 0 0;\n        padding: 7px;\n        width: auto;\n    }\n\n    span.frame span img {\n        display: block;\n        float: left;\n    }\n\n    span.frame span span {\n        clear: both;\n        color: #333333;\n        display: block;\n        padding: 5px 0 0;\n    }\n\n    span.align-center {\n        display: block;\n        overflow: hidden;\n        clear: both;\n    }\n\n    span.align-center>span {\n        display: block;\n        overflow: hidden;\n        margin: 13px auto 0;\n        text-align: center;\n    }\n\n    span.align-center span img {\n        margin: 0 auto;\n        text-align: center;\n    }\n\n    span.align-right {\n        display: block;\n        overflow: hidden;\n        clear: both;\n    }\n\n    span.align-right>span {\n        display: block;\n        overflow: hidden;\n        margin: 13px 0 0;\n        text-align: right;\n    }\n\n    span.align-right span img {\n        margin: 0;\n        text-align: right;\n    }\n\n    span.float-left {\n        display: block;\n        margin-right: 13px;\n        overflow: hidden;\n        float: left;\n    }\n\n    span.float-left span {\n        margin: 13px 0 0;\n    }\n\n    span.float-right {\n        display: block;\n        margin-left: 13px;\n        overflow: hidden;\n        float: right;\n    }\n\n    span.float-right>span {\n        display: block;\n        overflow: hidden;\n        margin: 13px auto 0;\n        text-align: right;\n    }\n\n    code,\n    tt {\n        margin: 0 2px;\n        padding: 0 5px;\n        white-space: nowrap;\n        border: 1px solid #eaeaea;\n        background-color: #f8f8f8;\n        border-radius: 3px;\n    }\n\n    pre code {\n        margin: 0;\n        padding: 0;\n        white-space: pre;\n        border: none;\n        background: transparent;\n    }\n\n    .highlight pre {\n        background-color: #f8f8f8;\n        border: 1px solid #cccccc;\n        font-size: 13px;\n        line-height: 19px;\n        overflow: auto;\n        padding: 6px 10px;\n        border-radius: 3px;\n    }\n\n    pre {\n        background-color: #f8f8f8;\n        border: 1px solid #cccccc;\n        font-size: 13px;\n        line-height: 19px;\n        overflow: auto;\n        padding: 6px 10px;\n        border-radius: 3px;\n    }\n\n    pre code,\n    pre tt {\n        background-color: transparent;\n        border: none;\n    }\n\n`;\n","import styled from 'styled-components';\n\nconst SideBySide = styled.div`\n    display: grid;\n    height: calc(100vh - 52px);\n    @media (orientation: portrait) {\n        grid-template-columns: 100%;\n        grid-template-rows: 50%;\n    }\n    @media (orientation: landscape) {\n        grid-template-columns: 50% 50%;\n        grid-template-rows: 100%;\n    }   \n`;\n\nexport default SideBySide;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EditorDiv, CodeArea } from './style';\n\n\nconst Editor = ({ markdown, setMarkdown }) => (\n    <EditorDiv>\n        <CodeArea id=\"editor\" value={markdown} onChange={e => setMarkdown(e.target.value)} autoFocus />\n    </EditorDiv>\n);\n\nEditor.propTypes = {\n    markdown: PropTypes.string,\n    setMarkdown: PropTypes.func\n};\n\nexport default Editor;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'react-markdown/with-html';\nimport { PreviewDiv } from './style';\n\nconst Preview = ({ markdown }) => (\n    <PreviewDiv id=\"preview\">\n        <Markdown\n            source={markdown}\n            linkTarget='_blank'\n            escapeHtml={false}\n            plugins={[require('remark-breaks')]}\n        />\n    </PreviewDiv>\n);\n\nPreview.propTypes = {\n    markdown: PropTypes.string\n};\n\nexport default Preview;","import React, { useState } from 'react';\nimport { initialMarkdown } from './constants';\nimport { FullScreen, Header, H2 } from './style';\nimport SideBySide from '../SideBySide';\nimport Editor from './Editor';\nimport Preview from './Preview';\n\n\nconst MarkdownEditor = () => {\n    const [markdown, setMarkdown] = useState(initialMarkdown);\n\n    return (\n        <FullScreen id=\"markdown-editor\">\n            <Header><H2 textAlign='center'>Markdown Editor</H2></Header>\n            <SideBySide>\n                <Editor markdown={markdown} setMarkdown={setMarkdown} />\n                <Preview markdown={markdown} />\n            </SideBySide>\n        </FullScreen>\n    );\n};\n\nexport default MarkdownEditor;\n","export const initialMarkdown =\n`![markdown](https://upload.wikimedia.org/wikipedia/commons/4/48/Markdown-mark.svg)\n\n# This is a Markdown H1\nHere's some **bold** and *italic* text.\nThis is also some __bold__ and _italic_ text.\n\n## This is a Markdown H2\nThe instructions for this project are located [here](https://learn.freecodecamp.org/front-end-libraries/front-end-libraries-projects/build-a-markdown-previewer).\n\\`\\`\\`\nfor (let i=0; i<Math.pow(2,1000); i++)\n  console.log('please do not try to run this code...');\nconsole.log('it will take forever to print this');\n\\`\\`\\`\nThis is a list\n- of\n- some\n- **bold**\n- stuff\n- with \\`console.log('code')\\`\n\n> \"Markdown is a text-to-HTML conversion tool for web writers\" - John Gruber, inventor of Markdown.\n`;","import React from 'react';\nimport { useFccTest, FccTests } from '@asteffey/react-fcc-test';\nimport MarkdownEditor from './components/MarkdownEditor';\n\nfunction App() {\n    useFccTest({\n        fccTest: FccTests.markdown_previewer,\n        queryParam: 'fcc-test'\n    });\n\n    return (\n        <main>\n            <MarkdownEditor />\n        </main>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}